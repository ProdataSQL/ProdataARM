{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS13_v2",
      "allowedValues": [
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_DS13_v2"
      ],
      "metadata": {
        "description": "Size of VM"
      }
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "sizeOf_E_Drive": {
      "type": "string",
      "defaultValue": "127",
      "metadata": {
        "description": "Size of E:/ drive in GB"
      }
    },
    "DiskCaching": {
      "type": "String",
      "defaultValue": "ReadOnly",
      "allowedValues": [
        "ReadOnly",
        "ReadWrite"
      ]
    },
    "IPAdress": {
      "defaultValue": "10.0.0.4",
      "type": "string"
    },
    "StorageType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ]
    },
    "IPAddressesType": {
      "defaultValue": "Static",
      "type": "String",
      "allowedValues": [
        "Dynamic",
        "Static"
      ]
    }
  },
  "variables": {
    "virtualNetworkName": "[concat(parameters('vmName'),'_VNET')]",
    "networkInterfaceName": "[concat(parameters('vmName'),'_nic')]",
    "addressPrefix": "10.0.0.0/16",
    "vnetId": "[resourceId('ProdataARM','Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "addressPrefix": "10.0.0.0/24",
    "storageAccountName": "prodataarmdisks494",
    "diagnosticsStorageAccountName": "prodataarmdiag702",
    "diagnosticsStorageAccountId": "\"[concat(\"Microsoft.Storage/storageAccounts/\",diagnosticsStorageAccountName)]\"",
    "diagnosticsStorageAccountType": "Standard_LRS",
    "publicIpAddressName": "[concat(parameters('vmName'),'_PublicIP')]",
    "subnetPrefix": "10.0.0.0/24",
    "subnetName": "default",
    "networkSecurityGroupName": "[concat(parameters('vmName'),'_NSG')]",
    "sqlConnectivityType": "Private",
    "sqlPortNumber": 1433,
    "sqlStorageDisksCount": 2,
    "sqlStorageWorkloadType": "DW",
    "sqlStorageDisksConfigurationType": "NEW",
    "sqlStorageStartingDeviceId": 2,
    "sqlStorageDeploymentToken": 96257,
    "sqlAutopatchingDayOfWeek": "Sunday",
    "sqlAutopatchingStartHour": "60",
    "sqlAutopatchingWindowDuration": 2,
    "rServicesEnabled": "false"
  },
    "resources": [
      {
        "name": "[parameters('vmName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2016-03-30",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
          "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
          "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]"
        ],
        "properties": {
          "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "windowsConfiguration": {
              "provisionVmAgent": "true"
            }
          },
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftSQLServer",
              "offer": "SQL2016SP1-WS2016",
              "sku": "SQLDEV",
              "version": "latest"
            },
            "osDisk": {
              "name": "[parameters('vmName')]",
              "createOption": "fromImage",
              "vhd": {
                "uri": "[concat(concat(reference(resourceId('ProdataARM', 'Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), parameters('vmName'), '20170127171226.vhd')]"
              }
            },
            "dataDisks": [
              {
                "name": "[concat(parameters('vmName'), '-disk-1')]",
                "createOption": "empty",
                "lun": 0,
                "diskSizeGB": "[parameters('sizeOf_E_Drive')]",
                "caching": "[parameters('DiskCaching')]",
                "vhd": {
                  "uri": "[concat(concat(reference(resourceId('ProdataARM', 'Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), parameters('vmName'), '-disk-1-20170127171226', '.vhd')]"
                }
              },
              {
                "name": "[concat(parameters('vmName'), '-disk-2')]",
                "createOption": "empty",
                "lun": 1,
                "diskSizeGB": "1023",
                "caching": "ReadOnly",
                "vhd": {
                  "uri": "[concat(concat(reference(resourceId('ProdataARM', 'Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), parameters('vmName'), '-disk-2-20170127171226', '.vhd')]"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId('ProdataARM', 'Microsoft.Storage/storageAccounts', variables('diagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
            }
          }
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('vmName'), '/SqlIaasExtension')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
          "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
        ],
        "properties": {
          "type": "SqlIaaSAgent",
          "publisher": "Microsoft.SqlServer.Management",
          "typeHandlerVersion": "1.2",
          "autoUpgradeMinorVersion": "true",
          "settings": {
            "AutoTelemetrySettings": {
              "Region": "[resourceGroup().location]"
            },
            "AutoPatchingSettings": {
              "PatchCategory": "WindowsMandatoryUpdates",
              "Enable": true,
              "DayOfWeek": "[variables('sqlAutopatchingDayOfWeek')]",
              "MaintenanceWindowStartingHour": "[variables('sqlAutopatchingStartHour')]",
              "MaintenanceWindowDuration": "[variables('sqlAutopatchingWindowDuration')]"
            },
            "KeyVaultCredentialSettings": {
              "Enable": false,
              "CredentialName": ""
            },
            "ServerConfigurationsManagementSettings": {
              "SQLConnectivityUpdateSettings": {
                "ConnectivityType": "[variables('sqlConnectivityType')]",
                "Port": "[variables('sqlPortNumber')]"
              },
              "SQLWorkloadTypeUpdateSettings": {
                "SQLWorkloadType": "[variables('sqlStorageWorkloadType')]"
              },
              "SQLStorageUpdateSettings": {
                "DiskCount": "[variables('sqlStorageDisksCount')]",
                "NumberOfColumns": "[variables('sqlStorageDisksCount')]",
                "StartingDeviceID": "[variables('sqlStorageStartingDeviceId')]",
                "DiskConfigurationType": "[variables('sqlStorageDisksConfigurationType')]"
              },
              "AdditionalFeaturesServerConfigurations": {
                "IsRServicesEnabled": "[variables('rServicesEnabled')]"
              }
            }
          },
          "protectedSettings": {}
        }
      },
      {
        "name": "[variables('storageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "properties": {
          "accountType": "[parameters('storageType')]"
        }
      },
      {
        "name": "[variables('diagnosticsStorageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "properties": {
          "accountType": "[variables('diagnosticsStorageAccountType')]"
        }
      },
      {
        "name": "[variables('virtualNetworkName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2016-09-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "name": "[variables('networkInterfaceName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2016-09-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
          "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAddress": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('IPAdress'))]",
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "[resourceId('ProdataARM','Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "[resourceId('ProdataARM', 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
          }
        }
      },
      {
        "name": "[variables('publicIpAddressName')]",
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2016-09-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIpAllocationMethod": "[parameters('IPAddressesType')]"
        }
      },
      {
        "name": "[variables('networkSecurityGroupName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2016-09-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-rdp",
              "properties": {
                "priority": 1000,
                "sourceAddressPrefix": "*",
                "protocol": "TCP",
                "destinationPortRange": "3389",
                "access": "Allow",
                "direction": "Inbound",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}